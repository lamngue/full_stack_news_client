{"version":3,"file":"static/js/320.78319746.chunk.js","mappings":"uQAwHA,UAjHc,WACV,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,IAAI,IACxCG,GAAWC,EAAAA,EAAAA,OAMjBC,EAAAA,EAAAA,YAAU,WACFL,GAAQA,EAAKM,OACK,oBAAdN,EAAKM,KACLC,EAAmB,kBACZP,EAAKM,KAAKN,KACjBF,EAAS,kBACY,gCAAdE,EAAKM,MACZC,EAAmB,8BAG/B,GAAG,CAACP,IAEJ,IAAMO,EAAqB,SAACC,GACxBC,EAAAA,EAAAA,KAAkB,CACdD,QAASA,EACTE,YACE,oBAEV,EAMA,OACIC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UAOIC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACDC,KAAK,QACLC,SAAU,CACNC,KAAM,GAEVC,WAAY,CACRD,KAAM,IAEVE,cAAe,CACXC,UAAU,GAEdC,SA/CI,SAACC,GACbpB,GAASqB,EAAAA,EAAAA,IAAUD,GACvB,EA8CYE,eAxBW,SAACC,GACpBC,QAAQC,IAAI,UAAWF,EAC3B,EAuBYG,aAAa,MAAKhB,SAAA,EAElBF,EAAAA,EAAAA,KAACI,EAAAA,EAAAA,KAAS,CACNe,MAAM,WACNd,KAAK,WACLe,MAAO,CACH,CACIC,UAAU,EACVxB,QAAS,gCAEfK,UAEFF,EAAAA,EAAAA,KAACsB,EAAAA,EAAK,OAGVtB,EAAAA,EAAAA,KAACI,EAAAA,EAAAA,KAAS,CACNe,MAAM,WACNd,KAAK,WACLe,MAAO,CACH,CACIC,UAAU,EACVxB,QAAS,gCAEfK,UAEFF,EAAAA,EAAAA,KAACsB,EAAAA,EAAAA,SAAc,OAGnBtB,EAAAA,EAAAA,KAACI,EAAAA,EAAAA,KAAS,CACNC,KAAK,WACLkB,cAAc,UACdf,WAAY,CACRgB,OAAQ,EACRjB,KAAM,IACRL,UAEFF,EAAAA,EAAAA,KAACyB,EAAAA,EAAQ,CAAAvB,SAAC,mBAGdF,EAAAA,EAAAA,KAACI,EAAAA,EAAAA,KAAS,CACNI,WAAY,CACRgB,OAAQ,EACRjB,KAAM,IACRL,UAEFC,EAAAA,EAAAA,MAACuB,EAAAA,EAAK,CAAAxB,SAAA,EACFF,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACC,KAAK,UAAUC,SAAS,SAAQ3B,UACpCF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAI,CAACC,GAAG,YAAW7B,SAAC,gBAEzBF,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACC,KAAK,UAAUC,SAAS,SAAQ3B,SAAC,mBAQjE,C","sources":["components/login.js"],"sourcesContent":["import { Form, Input, Button, Checkbox, Space, notification } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginUser } from \"../redux/action_creators\";\r\nimport { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nconst Login = () => {\r\n    const navigate = useNavigate();\r\n    const user = useSelector((state) => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const onLogin = (values) => {\r\n        dispatch(loginUser(values));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (user && user.data) {\r\n            if (user.data === \"Wrong password!\") {\r\n                notifyErrorMessage('Wrong password')\r\n            } else if (user.data.user) {\r\n                navigate(\"/main/all-post\");\r\n            } else if (user.data === 'Wrong username or password!') {\r\n                notifyErrorMessage('Wrong username or password')\r\n            }\r\n        }\r\n    }, [user]);\r\n\r\n    const notifyErrorMessage = (message) => {\r\n        notification.open({\r\n            message: message,\r\n            description:\r\n              'Please try again',\r\n          });\r\n    }\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log(\"Failed:\", errorInfo);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* <GoogleButton\r\n                type=\"light\" // can be light or dark\r\n                onClick={() => {\r\n                    console.log(\"Google button clicked\");\r\n                }}\r\n            /> */}\r\n            <Form\r\n                name=\"basic\"\r\n                labelCol={{\r\n                    span: 8,\r\n                }}\r\n                wrapperCol={{\r\n                    span: 16,\r\n                }}\r\n                initialValues={{\r\n                    remember: true,\r\n                }}\r\n                onFinish={onLogin}\r\n                onFinishFailed={onFinishFailed}\r\n                autoComplete=\"off\"\r\n            >\r\n                <Form.Item\r\n                    label=\"Username\"\r\n                    name=\"username\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your username!\",\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your password!\",\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"remember\"\r\n                    valuePropName=\"checked\"\r\n                    wrapperCol={{\r\n                        offset: 8,\r\n                        span: 16,\r\n                    }}\r\n                >\r\n                    <Checkbox>Remember me</Checkbox>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    wrapperCol={{\r\n                        offset: 8,\r\n                        span: 16,\r\n                    }}\r\n                >\r\n                    <Space>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            <Link to=\"/register\">Register</Link>\r\n                        </Button>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Login\r\n                        </Button>\r\n                    </Space>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["navigate","useNavigate","user","useSelector","state","dispatch","useDispatch","useEffect","data","notifyErrorMessage","message","notification","description","_jsx","_Fragment","children","_jsxs","Form","name","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","loginUser","onFinishFailed","errorInfo","console","log","autoComplete","label","rules","required","Input","valuePropName","offset","Checkbox","Space","Button","type","htmlType","Link","to"],"sourceRoot":""}